import cv2
import matplotlib.pyplot as plt

# Path to the input video
input_video_path = 'path_to_input_video.mp4'

# Read the input video
cap = cv2.VideoCapture(input_video_path)

# Load the pre-trained Haar cascades classifier for vehicle detection
vehicle_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_car.xml')

# Get the video properties
fps = int(cap.get(cv2.CAP_PROP_FPS))
width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
fourcc = cv2.VideoWriter_fourcc(*'XVID')

# Create VideoWriter object to save the output video
output_video_path = 'detected_vehicles.avi'
out = cv2.VideoWriter(output_video_path, fourcc, fps, (width, height))

# Read and detect vehicles in each frame of the video
while True:
    ret, frame = cap.read()
    if not ret:
        break
    
    # Convert the frame to grayscale
    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    # Detect vehicles in the frame
    vehicles = vehicle_cascade.detectMultiScale(gray_frame, scaleFactor=1.1, minNeighbors=5)
    
    # Draw rectangles around the detected vehicles
    for (x, y, w, h) in vehicles:
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
    
    # Write the frame with detected vehicles to the output video
    out.write(frame)

# Release VideoCapture and VideoWriter objects
cap.release()
out.release()

print(f"Detected vehicles video saved as {output_video_path}")
